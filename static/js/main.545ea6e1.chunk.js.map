{"version":3,"sources":["component/Header.js","component/InputArea.js","component/WeatherListArea.js","component/BottomArea.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","InputArea","cityInput","setCityInput","tryNewCity","cityNotFound","setCityNotFound","setUnits","handleUnits","e","type","placeholder","value","onChange","target","trim","id","onClick","name","defaultChecked","htmlFor","role","WeatherListArea","weatherData","setCity","list","i","length","push","cityName","temp","main","humidity","tempMax","temp_max","tempMin","temp_min","description","weather","map","order","index","upperName","toUpperCase","prevCity","filter","city","handleDelete","demo","BottomArea","loading","fetchData","App","useState","setLoading","localStorage","getItem","split","setWeatherData","units","PARAMS","lang","a","fetch","response","json","newCityResponse","cod","nameUpperCase","includes","tempCity","prev","useCallback","tempData","data","fetchingWeather","useEffect","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.545ea6e1.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <div className=\"header margin-bottom\">Weather App</div>\r\n  )\r\n}\r\n\r\nexport default Header;","const InputArea = ({\r\n  cityInput,\r\n  setCityInput,\r\n  tryNewCity,\r\n  cityNotFound,\r\n  setCityNotFound,\r\n  setUnits\r\n}) => {\r\n\r\n  const handleChange = (e) => {\r\n    setCityInput((e.target.value).trim());\r\n    setCityNotFound(false);\r\n  }\r\n\r\n  const handleUnits = (e) => {\r\n    setUnits(e);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-group mb-3 w-75 p-3\">\r\n        <input type=\"text\" className=\"form-control\" placeholder=\"請輸入城市名稱\" aria-label=\"City Name\" aria-describedby=\"button-addon2\" value={cityInput} onChange={handleChange}></input>\r\n        <button className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onClick={tryNewCity}>Get Weather</button>\r\n      </div>\r\n      <div className=\"margin-bottom\">\r\n        <span>請選擇溫度單位</span>\r\n        <div className=\"form-check\" onChange={(e) => handleUnits(`metric`)}>\r\n          <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" defaultChecked></input>\r\n          <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n            攝氏度（°C）\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check\" onChange={(e) => handleUnits(`Imperial`)}>\r\n          <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\"></input>\r\n          <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\">\r\n            華氏度（°F）\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"margin-bottom\">\r\n        {cityNotFound ? <div className=\"alert alert-danger\" role=\"alert\">找不到該城市</div> : ''}\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputArea;","const WeatherListArea = ({ weatherData, setCity }) => {\r\n\r\n  const handleDelete = (cityName) => {\r\n    const upperName = cityName.toUpperCase();\r\n    setCity((prevCity) => prevCity.filter((city) => city !== upperName));\r\n  }\r\n\r\n  const demo = () => {\r\n    let list = [];\r\n    if (!weatherData) {\r\n      return <div></div>;\r\n    } else {\r\n      for (let i = (weatherData.length - 1); i >= 0; i--) {\r\n        list.push({\r\n          cityName: weatherData[i].name,\r\n          temp: weatherData[i].main.temp,\r\n          humidity: weatherData[i].main.humidity,\r\n          tempMax: weatherData[i].main.temp_max,\r\n          tempMin: weatherData[i].main.temp_min,\r\n          description: weatherData[i].weather[0].description\r\n        });\r\n      }\r\n      const newArr = list.map((order, index) => {\r\n        return (\r\n          <div className=\"container border-bottom\" key={index}>\r\n            <div className=\"row line-height\">\r\n              <div className=\"col\">\r\n                {order.cityName}\r\n              </div>\r\n              <div className=\"col\">\r\n                {order.description}\r\n              </div>\r\n              <div className=\"col\">\r\n                {order.temp}\r\n              </div>\r\n              <div className=\"col\">\r\n                {order.tempMax}\r\n              </div>\r\n              <div className=\"col\">\r\n                {order.tempMin}\r\n              </div>\r\n              <div className=\"col\">\r\n                {order.humidity}%\r\n              </div>\r\n              <div className=\"col\">\r\n                <button className=\"delete-btn\" onClick={() => handleDelete(order.cityName)}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n      return newArr;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container border-bottom\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            城市\r\n          </div>\r\n          <div className=\"col\">\r\n            天氣狀況\r\n          </div>\r\n          <div className=\"col\">\r\n            當前溫度\r\n          </div>\r\n          <div className=\"col\">\r\n            最高溫度\r\n          </div>\r\n          <div className=\"col\">\r\n            最低溫度\r\n          </div>\r\n          <div className=\"col\">\r\n            濕度\r\n          </div>\r\n          <div className=\"col\">\r\n            刪除\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"margin-bottom\">{demo()}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WeatherListArea;","const BottomArea = ({ loading, fetchData, setCity }) => {\r\n\r\n  const handleDeleteAll = () => {\r\n    setCity([]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" className=\"btn btn btn-outline-dark\" onClick={fetchData}>重新整理</button>\r\n      <button type=\"button\" className=\"btn btn btn-outline-dark margin-left\" onClick={handleDeleteAll}>全部刪除</button>\r\n      <div className=\"inline margin-left\">\r\n        {loading ?\r\n          <div className=\"spinner-border text-dark\" role=\"status\"><span className=\"visually-hidden\">Loading...</span></div> : `Done !`}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BottomArea;","import { useEffect, useState, useCallback } from 'react';\nimport Header from './component/Header';\nimport InputArea from './component/InputArea';\nimport WeatherListArea from './component/WeatherListArea';\nimport BottomArea from './component/BottomArea';\nimport './App.css';\n\nfunction App() {\n\n  const [loading, setLoading] = useState();\n  const [cityInput, setCityInput] = useState(\"\");\n  const [cityNotFound, setCityNotFound] = useState();\n  const [city, setCity] = useState(localStorage.getItem('cityList') ? localStorage.getItem('cityList').split(',') : []);\n  const [weatherData, setWeatherData] = useState([]);\n  const [units, setUnits] = useState(`Metric`);\n\n  const PARAMS = `ddc25a8b210ab01bba26befd30c70b9d`;\n  const lang = `zh_tw`; //語言\n\n  //確認city是否存在\n  const tryNewCity = async () => {\n    if (!cityInput) {\n      return;\n    } else {\n      setLoading(true);\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityInput}&units=${units}&lang=${lang}&appid=${PARAMS}`);\n      const newCityResponse = await response.json();\n      if (newCityResponse.cod === '404') {\n        setCityNotFound(true);\n      } else {\n        setCityNotFound(false);\n        const nameUpperCase = (newCityResponse.name).toUpperCase();\n        if (city.includes(nameUpperCase)) {\n          let tempCity = city.filter(name => name !== nameUpperCase);\n          tempCity.push(nameUpperCase);\n          setCity(tempCity);\n        } else {\n          setCity((prev) => {\n            return [\n              ...prev,\n              nameUpperCase\n            ]\n          })\n        }\n      }\n      setCityInput(\"\");\n      setLoading(false);\n    }\n  }\n\n  //更新所有city的資訊\n  const fetchData = useCallback(() => {\n    const fetchingWeather = async () => {\n      setLoading(true);\n      let tempData = [];\n      for (const order of city) {\n        const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${order}&units=${units}&lang=${lang}&appid=${PARAMS}`);\n        const data = await response.json();\n        tempData.push(data);\n      }\n      setWeatherData(tempData);\n      setLoading(false);\n    }\n    fetchingWeather();\n  }, [PARAMS, city, lang, units])\n\n  useEffect(() => {\n    fetchData();\n    localStorage.setItem('cityList', city);\n  }, [fetchData, city])\n\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <InputArea\n          cityInput={cityInput}\n          tryNewCity={tryNewCity}\n          cityNotFound={cityNotFound}\n          setCityInput={setCityInput}\n          setUnits={setUnits}\n          setCityNotFound={setCityNotFound}\n        />\n        <WeatherListArea\n          weatherData={weatherData}\n          setCity={setCity}\n        />\n        <BottomArea\n          loading={loading}\n          fetchData={fetchData}\n          setCity={setCity}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}